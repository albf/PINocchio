##############################################################
#
# This file includes all the test targets as well as all the
# non-default build rules and test recipes.
#
##############################################################

ident:
	astyle --style=kr --indent=spaces --indent-col1-comments --align-pointer=name --unpad-paren --add-brackets --pad-oper -n *.cpp *.h examples/*.c

##############################################################
#
# Test targets
#
##############################################################

###### Place all generic definitions here ######

# This defines tests which run tools of the same name.  This is simply for convenience to avoid
# defining the test name twice (once in TOOL_ROOTS and again in TEST_ROOTS).
# Tests defined here should not be defined in TOOL_ROOTS and TEST_ROOTS.
TEST_TOOL_ROOTS := PINocchio

# This defines the tests to be run that were not already defined in TEST_TOOL_ROOTS.
TEST_ROOTS := 

# This defines the tools which will be run during the the tests, and were not already defined in
# TEST_TOOL_ROOTS.
TOOL_ROOTS :=

# This defines the static analysis tools which will be run during the the tests. They should not
# be defined in TEST_TOOL_ROOTS. If a test with the same name exists, it should be defined in
# TEST_ROOTS.
# Note: Static analysis tools are in fact executables linked with the Pin Static Analysis Library.
# This library provides a subset of the Pin APIs which allows the tool to perform static analysis
# of an application or dll. Pin itself is not used when this tool runs.
SA_TOOL_ROOTS :=

# This defines all the applications that will be run during the tests.
EXAMPLES_SOURCES = $(notdir $(wildcard examples/*_app.c))
EXAMPLES = $(patsubst %_app.c,%_app,$(EXAMPLES_SOURCES))

APP_ROOTS := $(EXAMPLES)

# This defines any additional object files that need to be compiled.
OBJECT_ROOTS :=

# This defines any additional dlls (shared objects), other than the pintools, that need to be compiled.
DLL_ROOTS :=

# This defines any static libraries (archives), that need to be built.
LIB_ROOTS := 

###### Define the sanity subset ######

# This defines the list of tests that should run in sanity. It should include all the tests listed in
# TEST_TOOL_ROOTS and TEST_ROOTS excluding only unstable tests.
SANITY_SUBSET := $(TEST_TOOL_ROOTS) $(TEST_ROOTS)

##############################################################
#
# Test recipes
#
##############################################################

# This section contains recipes for tests other than the default.
# See makefile.default.rules for the default test rules.
# All tests in this section should adhere to the naming convention: <testname>.test


##############################################################
#
# Build rules
#
##############################################################

# Build the intermediate object file.
$(OBJDIR)error$(OBJ_SUFFIX): error.cpp error.h
	$(CXX) $(TOOL_CXXFLAGS) $(COMP_OBJ)$@ $<

$(OBJDIR)trace_bank$(OBJ_SUFFIX): trace_bank.cpp trace_bank.h sync.h
	$(CXX) $(TOOL_CXXFLAGS) $(COMP_OBJ)$@ $<

$(OBJDIR)lock_hash$(OBJ_SUFFIX): lock_hash.cpp lock_hash.h sync.h uthash.h
	$(CXX) $(TOOL_CXXFLAGS) $(COMP_OBJ)$@ $<

$(OBJDIR)sync$(OBJ_SUFFIX): sync.cpp sync.h lock_hash.h trace_bank.h
	$(CXX) $(TOOL_CXXFLAGS) $(COMP_OBJ)$@ $<

$(OBJDIR)PINocchio$(OBJ_SUFFIX): PINocchio.cpp sync.h trace_bank.h error.h 
	$(CXX) $(TOOL_CXXFLAGS) $(COMP_OBJ)$@ $<

# Build the tool as a dll (shared object).
$(OBJDIR)PINocchio$(PINTOOL_SUFFIX): $(OBJDIR)error$(OBJ_SUFFIX) $(OBJDIR)sync$(OBJ_SUFFIX) $(OBJDIR)lock_hash$(OBJ_SUFFIX) $(OBJDIR)trace_bank$(OBJ_SUFFIX) $(OBJDIR)PINocchio$(OBJ_SUFFIX)
	$(LINKER) $(TOOL_LDFLAGS_NOOPT) $(LINK_EXE)$@ $(^:%.h=) $(TOOL_LPATHS) $(TOOL_LIBS)

# This section contains the build rules for all binaries that have special build rules.
# See makefile.default.rules for the default build rules.

EXAMPLES_CFLAGS = -lpthread
$(OBJDIR)%_app$(EXE_SUFFIX): examples/%_app.c
	$(CC) -o $@ $< $(EXAMPLES_CFLAGS) 	
